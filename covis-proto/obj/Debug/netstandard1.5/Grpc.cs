// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: grpc.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from grpc.proto</summary>
public static partial class GrpcReflection {

  #region Descriptor
  /// <summary>File descriptor for grpc.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static GrpcReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CgpncnBjLnByb3RvGhtnb29nbGUvcHJvdG9idWYvZW1wdHkucHJvdG8isAIK",
          "DVVwZGF0ZU1lc3NhZ2USEQoJdGltZXN0YW1wGAEgASgDEh0KCHN5bmNhYmxl",
          "GBQgASgLMgkuU3luY2FibGVIABInCgljb250YWluZXIYFSABKAsyEi5TeW5j",
          "YWJsZUNvbnRhaW5lckgAEigKCmRpc2Nvbm5lY3QYFiABKAsyEi5EaXNjb25u",
          "ZWN0TWVzc2FnZUgAEjIKD2RlbGV0ZUNvbnRhaW5lchgXIAEoCzIXLkRlbGV0",
          "ZUNvbnRhaW5lck1lc3NhZ2VIABIwCg5kZWxldGVTeW5jYWJsZRgYIAEoCzIW",
          "LkRlbGV0ZVN5bmNhYmxlTWVzc2FnZUgAEioKC2F1ZGlvVXBkYXRlGBkgASgL",
          "MhMuQXVkaW9VcGRhdGVNZXNzYWdlSABCCAoGdXBkYXRlIi8KFkRlbGV0ZUNv",
          "bnRhaW5lck1lc3NhZ2USFQoNY29udGFpbmVyVVVJRBgBIAEoCSItChVEZWxl",
          "dGVTeW5jYWJsZU1lc3NhZ2USFAoMc3luY2FibGVVVUlEGAEgASgJIjsKEURp",
          "c2Nvbm5lY3RNZXNzYWdlEiYKCmNvbnRhaW5lcnMYASADKAsyEi5TeW5jYWJs",
          "ZUNvbnRhaW5lciI/ChJBdWRpb1VwZGF0ZU1lc3NhZ2USFQoNY29udGFpbmVy",
          "VVVJRBgBIAEoCRISCgphdWRpb0ZyYW1lGAIgASgMIicKBFZlYzMSCQoBeBgB",
          "IAEoARIJCgF5GAIgASgBEgkKAXoYAyABKAEiMgoEVmVjNBIJCgF3GAEgASgB",
          "EgkKAXgYAiABKAESCQoBeRgDIAEoARIJCgF6GAQgASgBIoMBCghTeW5jYWJs",
          "ZRIMCgR1dWlkGAEgASgJEhcKCHBvc2l0aW9uGAIgASgLMgUuVmVjMxIXCghy",
          "b3RhdGlvbhgDIAEoCzIFLlZlYzQSFwoIdmVsb2NpdHkYBCABKAsyBS5WZWMz",
          "Eh4KD2FuZ3VsYXJWZWxvY2l0eRgFIAEoCzIFLlZlYzMi1wEKEVN5bmNhYmxl",
          "Q29udGFpbmVyEgwKBHV1aWQYASABKAkSDQoFbW9kZWwYAiABKAkSNAoJc3lu",
          "Y2FibGVzGAMgAygLMiEuU3luY2FibGVDb250YWluZXIuU3luY2FibGVzRW50",
          "cnkSJAoEdHlwZRgEIAEoDjIWLlN5bmNhYmxlQ29udGFpbmVyVHlwZRIMCgRu",
          "YW1lGAUgASgJGjsKDlN5bmNhYmxlc0VudHJ5EgsKA2tleRgBIAEoCRIYCgV2",
          "YWx1ZRgCIAEoCzIJLlN5bmNhYmxlOgI4ASpsChVTeW5jYWJsZUNvbnRhaW5l",
          "clR5cGUSCwoHVU5LTk9XThAAEhIKDlZJUlRVQUxfUEVSU09OEAESDwoLUkVB",
          "TF9QRVJTT04QAhILCgdUUkFDS0VSEAMSFAoQVklSVUFMX0FTU0lTVEFOVBAE",
          "MnYKDENvdmlzU2VydmljZRI4CgRQaW5nEhYuZ29vZ2xlLnByb3RvYnVmLkVt",
          "cHR5GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASLAoEU3luYxIOLlVwZGF0",
          "ZU1lc3NhZ2UaDi5VcGRhdGVNZXNzYWdlIgAoATABQioKHWNoLnVuaWJhcy5k",
          "bWkuZGJpcy5jb3Zpcy5ncnBjQglDb3Zpc0dycGNiBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::SyncableContainerType), }, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateMessage), global::UpdateMessage.Parser, new[]{ "Timestamp", "Syncable", "Container", "Disconnect", "DeleteContainer", "DeleteSyncable", "AudioUpdate" }, new[]{ "Update" }, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteContainerMessage), global::DeleteContainerMessage.Parser, new[]{ "ContainerUUID" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteSyncableMessage), global::DeleteSyncableMessage.Parser, new[]{ "SyncableUUID" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DisconnectMessage), global::DisconnectMessage.Parser, new[]{ "Containers" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AudioUpdateMessage), global::AudioUpdateMessage.Parser, new[]{ "ContainerUUID", "AudioFrame" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Vec3), global::Vec3.Parser, new[]{ "X", "Y", "Z" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Vec4), global::Vec4.Parser, new[]{ "W", "X", "Y", "Z" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Syncable), global::Syncable.Parser, new[]{ "Uuid", "Position", "Rotation", "Velocity", "AngularVelocity" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SyncableContainer), global::SyncableContainer.Parser, new[]{ "Uuid", "Model", "Syncables", "Type", "Name" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
        }));
  }
  #endregion

}
#region Enums
public enum SyncableContainerType {
  [pbr::OriginalName("UNKNOWN")] Unknown = 0,
  [pbr::OriginalName("VIRTUAL_PERSON")] VirtualPerson = 1,
  [pbr::OriginalName("REAL_PERSON")] RealPerson = 2,
  [pbr::OriginalName("TRACKER")] Tracker = 3,
  [pbr::OriginalName("VIRUAL_ASSISTANT")] VirualAssistant = 4,
}

#endregion

#region Messages
public sealed partial class UpdateMessage : pb::IMessage<UpdateMessage> {
  private static readonly pb::MessageParser<UpdateMessage> _parser = new pb::MessageParser<UpdateMessage>(() => new UpdateMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GrpcReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateMessage(UpdateMessage other) : this() {
    timestamp_ = other.timestamp_;
    switch (other.UpdateCase) {
      case UpdateOneofCase.Syncable:
        Syncable = other.Syncable.Clone();
        break;
      case UpdateOneofCase.Container:
        Container = other.Container.Clone();
        break;
      case UpdateOneofCase.Disconnect:
        Disconnect = other.Disconnect.Clone();
        break;
      case UpdateOneofCase.DeleteContainer:
        DeleteContainer = other.DeleteContainer.Clone();
        break;
      case UpdateOneofCase.DeleteSyncable:
        DeleteSyncable = other.DeleteSyncable.Clone();
        break;
      case UpdateOneofCase.AudioUpdate:
        AudioUpdate = other.AudioUpdate.Clone();
        break;
    }

    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateMessage Clone() {
    return new UpdateMessage(this);
  }

  /// <summary>Field number for the "timestamp" field.</summary>
  public const int TimestampFieldNumber = 1;
  private long timestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Timestamp {
    get { return timestamp_; }
    set {
      timestamp_ = value;
    }
  }

  /// <summary>Field number for the "syncable" field.</summary>
  public const int SyncableFieldNumber = 20;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Syncable Syncable {
    get { return updateCase_ == UpdateOneofCase.Syncable ? (global::Syncable) update_ : null; }
    set {
      update_ = value;
      updateCase_ = value == null ? UpdateOneofCase.None : UpdateOneofCase.Syncable;
    }
  }

  /// <summary>Field number for the "container" field.</summary>
  public const int ContainerFieldNumber = 21;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SyncableContainer Container {
    get { return updateCase_ == UpdateOneofCase.Container ? (global::SyncableContainer) update_ : null; }
    set {
      update_ = value;
      updateCase_ = value == null ? UpdateOneofCase.None : UpdateOneofCase.Container;
    }
  }

  /// <summary>Field number for the "disconnect" field.</summary>
  public const int DisconnectFieldNumber = 22;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DisconnectMessage Disconnect {
    get { return updateCase_ == UpdateOneofCase.Disconnect ? (global::DisconnectMessage) update_ : null; }
    set {
      update_ = value;
      updateCase_ = value == null ? UpdateOneofCase.None : UpdateOneofCase.Disconnect;
    }
  }

  /// <summary>Field number for the "deleteContainer" field.</summary>
  public const int DeleteContainerFieldNumber = 23;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeleteContainerMessage DeleteContainer {
    get { return updateCase_ == UpdateOneofCase.DeleteContainer ? (global::DeleteContainerMessage) update_ : null; }
    set {
      update_ = value;
      updateCase_ = value == null ? UpdateOneofCase.None : UpdateOneofCase.DeleteContainer;
    }
  }

  /// <summary>Field number for the "deleteSyncable" field.</summary>
  public const int DeleteSyncableFieldNumber = 24;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeleteSyncableMessage DeleteSyncable {
    get { return updateCase_ == UpdateOneofCase.DeleteSyncable ? (global::DeleteSyncableMessage) update_ : null; }
    set {
      update_ = value;
      updateCase_ = value == null ? UpdateOneofCase.None : UpdateOneofCase.DeleteSyncable;
    }
  }

  /// <summary>Field number for the "audioUpdate" field.</summary>
  public const int AudioUpdateFieldNumber = 25;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AudioUpdateMessage AudioUpdate {
    get { return updateCase_ == UpdateOneofCase.AudioUpdate ? (global::AudioUpdateMessage) update_ : null; }
    set {
      update_ = value;
      updateCase_ = value == null ? UpdateOneofCase.None : UpdateOneofCase.AudioUpdate;
    }
  }

  private object update_;
  /// <summary>Enum of possible cases for the "update" oneof.</summary>
  public enum UpdateOneofCase {
    None = 0,
    Syncable = 20,
    Container = 21,
    Disconnect = 22,
    DeleteContainer = 23,
    DeleteSyncable = 24,
    AudioUpdate = 25,
  }
  private UpdateOneofCase updateCase_ = UpdateOneofCase.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateOneofCase UpdateCase {
    get { return updateCase_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearUpdate() {
    updateCase_ = UpdateOneofCase.None;
    update_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Timestamp != other.Timestamp) return false;
    if (!object.Equals(Syncable, other.Syncable)) return false;
    if (!object.Equals(Container, other.Container)) return false;
    if (!object.Equals(Disconnect, other.Disconnect)) return false;
    if (!object.Equals(DeleteContainer, other.DeleteContainer)) return false;
    if (!object.Equals(DeleteSyncable, other.DeleteSyncable)) return false;
    if (!object.Equals(AudioUpdate, other.AudioUpdate)) return false;
    if (UpdateCase != other.UpdateCase) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
    if (updateCase_ == UpdateOneofCase.Syncable) hash ^= Syncable.GetHashCode();
    if (updateCase_ == UpdateOneofCase.Container) hash ^= Container.GetHashCode();
    if (updateCase_ == UpdateOneofCase.Disconnect) hash ^= Disconnect.GetHashCode();
    if (updateCase_ == UpdateOneofCase.DeleteContainer) hash ^= DeleteContainer.GetHashCode();
    if (updateCase_ == UpdateOneofCase.DeleteSyncable) hash ^= DeleteSyncable.GetHashCode();
    if (updateCase_ == UpdateOneofCase.AudioUpdate) hash ^= AudioUpdate.GetHashCode();
    hash ^= (int) updateCase_;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Timestamp != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Timestamp);
    }
    if (updateCase_ == UpdateOneofCase.Syncable) {
      output.WriteRawTag(162, 1);
      output.WriteMessage(Syncable);
    }
    if (updateCase_ == UpdateOneofCase.Container) {
      output.WriteRawTag(170, 1);
      output.WriteMessage(Container);
    }
    if (updateCase_ == UpdateOneofCase.Disconnect) {
      output.WriteRawTag(178, 1);
      output.WriteMessage(Disconnect);
    }
    if (updateCase_ == UpdateOneofCase.DeleteContainer) {
      output.WriteRawTag(186, 1);
      output.WriteMessage(DeleteContainer);
    }
    if (updateCase_ == UpdateOneofCase.DeleteSyncable) {
      output.WriteRawTag(194, 1);
      output.WriteMessage(DeleteSyncable);
    }
    if (updateCase_ == UpdateOneofCase.AudioUpdate) {
      output.WriteRawTag(202, 1);
      output.WriteMessage(AudioUpdate);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Timestamp != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
    }
    if (updateCase_ == UpdateOneofCase.Syncable) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(Syncable);
    }
    if (updateCase_ == UpdateOneofCase.Container) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(Container);
    }
    if (updateCase_ == UpdateOneofCase.Disconnect) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(Disconnect);
    }
    if (updateCase_ == UpdateOneofCase.DeleteContainer) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(DeleteContainer);
    }
    if (updateCase_ == UpdateOneofCase.DeleteSyncable) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(DeleteSyncable);
    }
    if (updateCase_ == UpdateOneofCase.AudioUpdate) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(AudioUpdate);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateMessage other) {
    if (other == null) {
      return;
    }
    if (other.Timestamp != 0L) {
      Timestamp = other.Timestamp;
    }
    switch (other.UpdateCase) {
      case UpdateOneofCase.Syncable:
        if (Syncable == null) {
          Syncable = new global::Syncable();
        }
        Syncable.MergeFrom(other.Syncable);
        break;
      case UpdateOneofCase.Container:
        if (Container == null) {
          Container = new global::SyncableContainer();
        }
        Container.MergeFrom(other.Container);
        break;
      case UpdateOneofCase.Disconnect:
        if (Disconnect == null) {
          Disconnect = new global::DisconnectMessage();
        }
        Disconnect.MergeFrom(other.Disconnect);
        break;
      case UpdateOneofCase.DeleteContainer:
        if (DeleteContainer == null) {
          DeleteContainer = new global::DeleteContainerMessage();
        }
        DeleteContainer.MergeFrom(other.DeleteContainer);
        break;
      case UpdateOneofCase.DeleteSyncable:
        if (DeleteSyncable == null) {
          DeleteSyncable = new global::DeleteSyncableMessage();
        }
        DeleteSyncable.MergeFrom(other.DeleteSyncable);
        break;
      case UpdateOneofCase.AudioUpdate:
        if (AudioUpdate == null) {
          AudioUpdate = new global::AudioUpdateMessage();
        }
        AudioUpdate.MergeFrom(other.AudioUpdate);
        break;
    }

    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Timestamp = input.ReadInt64();
          break;
        }
        case 162: {
          global::Syncable subBuilder = new global::Syncable();
          if (updateCase_ == UpdateOneofCase.Syncable) {
            subBuilder.MergeFrom(Syncable);
          }
          input.ReadMessage(subBuilder);
          Syncable = subBuilder;
          break;
        }
        case 170: {
          global::SyncableContainer subBuilder = new global::SyncableContainer();
          if (updateCase_ == UpdateOneofCase.Container) {
            subBuilder.MergeFrom(Container);
          }
          input.ReadMessage(subBuilder);
          Container = subBuilder;
          break;
        }
        case 178: {
          global::DisconnectMessage subBuilder = new global::DisconnectMessage();
          if (updateCase_ == UpdateOneofCase.Disconnect) {
            subBuilder.MergeFrom(Disconnect);
          }
          input.ReadMessage(subBuilder);
          Disconnect = subBuilder;
          break;
        }
        case 186: {
          global::DeleteContainerMessage subBuilder = new global::DeleteContainerMessage();
          if (updateCase_ == UpdateOneofCase.DeleteContainer) {
            subBuilder.MergeFrom(DeleteContainer);
          }
          input.ReadMessage(subBuilder);
          DeleteContainer = subBuilder;
          break;
        }
        case 194: {
          global::DeleteSyncableMessage subBuilder = new global::DeleteSyncableMessage();
          if (updateCase_ == UpdateOneofCase.DeleteSyncable) {
            subBuilder.MergeFrom(DeleteSyncable);
          }
          input.ReadMessage(subBuilder);
          DeleteSyncable = subBuilder;
          break;
        }
        case 202: {
          global::AudioUpdateMessage subBuilder = new global::AudioUpdateMessage();
          if (updateCase_ == UpdateOneofCase.AudioUpdate) {
            subBuilder.MergeFrom(AudioUpdate);
          }
          input.ReadMessage(subBuilder);
          AudioUpdate = subBuilder;
          break;
        }
      }
    }
  }

}

public sealed partial class DeleteContainerMessage : pb::IMessage<DeleteContainerMessage> {
  private static readonly pb::MessageParser<DeleteContainerMessage> _parser = new pb::MessageParser<DeleteContainerMessage>(() => new DeleteContainerMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteContainerMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GrpcReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteContainerMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteContainerMessage(DeleteContainerMessage other) : this() {
    containerUUID_ = other.containerUUID_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteContainerMessage Clone() {
    return new DeleteContainerMessage(this);
  }

  /// <summary>Field number for the "containerUUID" field.</summary>
  public const int ContainerUUIDFieldNumber = 1;
  private string containerUUID_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ContainerUUID {
    get { return containerUUID_; }
    set {
      containerUUID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteContainerMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteContainerMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ContainerUUID != other.ContainerUUID) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ContainerUUID.Length != 0) hash ^= ContainerUUID.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ContainerUUID.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ContainerUUID);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ContainerUUID.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ContainerUUID);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteContainerMessage other) {
    if (other == null) {
      return;
    }
    if (other.ContainerUUID.Length != 0) {
      ContainerUUID = other.ContainerUUID;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ContainerUUID = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class DeleteSyncableMessage : pb::IMessage<DeleteSyncableMessage> {
  private static readonly pb::MessageParser<DeleteSyncableMessage> _parser = new pb::MessageParser<DeleteSyncableMessage>(() => new DeleteSyncableMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteSyncableMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GrpcReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteSyncableMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteSyncableMessage(DeleteSyncableMessage other) : this() {
    syncableUUID_ = other.syncableUUID_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteSyncableMessage Clone() {
    return new DeleteSyncableMessage(this);
  }

  /// <summary>Field number for the "syncableUUID" field.</summary>
  public const int SyncableUUIDFieldNumber = 1;
  private string syncableUUID_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SyncableUUID {
    get { return syncableUUID_; }
    set {
      syncableUUID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteSyncableMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteSyncableMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SyncableUUID != other.SyncableUUID) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SyncableUUID.Length != 0) hash ^= SyncableUUID.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SyncableUUID.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(SyncableUUID);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SyncableUUID.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SyncableUUID);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteSyncableMessage other) {
    if (other == null) {
      return;
    }
    if (other.SyncableUUID.Length != 0) {
      SyncableUUID = other.SyncableUUID;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SyncableUUID = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class DisconnectMessage : pb::IMessage<DisconnectMessage> {
  private static readonly pb::MessageParser<DisconnectMessage> _parser = new pb::MessageParser<DisconnectMessage>(() => new DisconnectMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DisconnectMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GrpcReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DisconnectMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DisconnectMessage(DisconnectMessage other) : this() {
    containers_ = other.containers_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DisconnectMessage Clone() {
    return new DisconnectMessage(this);
  }

  /// <summary>Field number for the "containers" field.</summary>
  public const int ContainersFieldNumber = 1;
  private static readonly pb::FieldCodec<global::SyncableContainer> _repeated_containers_codec
      = pb::FieldCodec.ForMessage(10, global::SyncableContainer.Parser);
  private readonly pbc::RepeatedField<global::SyncableContainer> containers_ = new pbc::RepeatedField<global::SyncableContainer>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::SyncableContainer> Containers {
    get { return containers_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DisconnectMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DisconnectMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!containers_.Equals(other.containers_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= containers_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    containers_.WriteTo(output, _repeated_containers_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += containers_.CalculateSize(_repeated_containers_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DisconnectMessage other) {
    if (other == null) {
      return;
    }
    containers_.Add(other.containers_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          containers_.AddEntriesFrom(input, _repeated_containers_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class AudioUpdateMessage : pb::IMessage<AudioUpdateMessage> {
  private static readonly pb::MessageParser<AudioUpdateMessage> _parser = new pb::MessageParser<AudioUpdateMessage>(() => new AudioUpdateMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AudioUpdateMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GrpcReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AudioUpdateMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AudioUpdateMessage(AudioUpdateMessage other) : this() {
    containerUUID_ = other.containerUUID_;
    audioFrame_ = other.audioFrame_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AudioUpdateMessage Clone() {
    return new AudioUpdateMessage(this);
  }

  /// <summary>Field number for the "containerUUID" field.</summary>
  public const int ContainerUUIDFieldNumber = 1;
  private string containerUUID_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ContainerUUID {
    get { return containerUUID_; }
    set {
      containerUUID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "audioFrame" field.</summary>
  public const int AudioFrameFieldNumber = 2;
  private pb::ByteString audioFrame_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString AudioFrame {
    get { return audioFrame_; }
    set {
      audioFrame_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AudioUpdateMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AudioUpdateMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ContainerUUID != other.ContainerUUID) return false;
    if (AudioFrame != other.AudioFrame) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ContainerUUID.Length != 0) hash ^= ContainerUUID.GetHashCode();
    if (AudioFrame.Length != 0) hash ^= AudioFrame.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ContainerUUID.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ContainerUUID);
    }
    if (AudioFrame.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(AudioFrame);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ContainerUUID.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ContainerUUID);
    }
    if (AudioFrame.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(AudioFrame);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AudioUpdateMessage other) {
    if (other == null) {
      return;
    }
    if (other.ContainerUUID.Length != 0) {
      ContainerUUID = other.ContainerUUID;
    }
    if (other.AudioFrame.Length != 0) {
      AudioFrame = other.AudioFrame;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ContainerUUID = input.ReadString();
          break;
        }
        case 18: {
          AudioFrame = input.ReadBytes();
          break;
        }
      }
    }
  }

}

public sealed partial class Vec3 : pb::IMessage<Vec3> {
  private static readonly pb::MessageParser<Vec3> _parser = new pb::MessageParser<Vec3>(() => new Vec3());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Vec3> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GrpcReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Vec3() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Vec3(Vec3 other) : this() {
    x_ = other.x_;
    y_ = other.y_;
    z_ = other.z_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Vec3 Clone() {
    return new Vec3(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private double x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private double y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "z" field.</summary>
  public const int ZFieldNumber = 3;
  private double z_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Z {
    get { return z_; }
    set {
      z_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Vec3);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Vec3 other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(X, other.X)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Y, other.Y)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Z, other.Z)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (X != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(X);
    if (Y != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Y);
    if (Z != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Z);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (X != 0D) {
      output.WriteRawTag(9);
      output.WriteDouble(X);
    }
    if (Y != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(Y);
    }
    if (Z != 0D) {
      output.WriteRawTag(25);
      output.WriteDouble(Z);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (X != 0D) {
      size += 1 + 8;
    }
    if (Y != 0D) {
      size += 1 + 8;
    }
    if (Z != 0D) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Vec3 other) {
    if (other == null) {
      return;
    }
    if (other.X != 0D) {
      X = other.X;
    }
    if (other.Y != 0D) {
      Y = other.Y;
    }
    if (other.Z != 0D) {
      Z = other.Z;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          X = input.ReadDouble();
          break;
        }
        case 17: {
          Y = input.ReadDouble();
          break;
        }
        case 25: {
          Z = input.ReadDouble();
          break;
        }
      }
    }
  }

}

public sealed partial class Vec4 : pb::IMessage<Vec4> {
  private static readonly pb::MessageParser<Vec4> _parser = new pb::MessageParser<Vec4>(() => new Vec4());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Vec4> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GrpcReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Vec4() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Vec4(Vec4 other) : this() {
    w_ = other.w_;
    x_ = other.x_;
    y_ = other.y_;
    z_ = other.z_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Vec4 Clone() {
    return new Vec4(this);
  }

  /// <summary>Field number for the "w" field.</summary>
  public const int WFieldNumber = 1;
  private double w_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double W {
    get { return w_; }
    set {
      w_ = value;
    }
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 2;
  private double x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 3;
  private double y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "z" field.</summary>
  public const int ZFieldNumber = 4;
  private double z_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Z {
    get { return z_; }
    set {
      z_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Vec4);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Vec4 other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(W, other.W)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(X, other.X)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Y, other.Y)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Z, other.Z)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (W != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(W);
    if (X != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(X);
    if (Y != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Y);
    if (Z != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Z);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (W != 0D) {
      output.WriteRawTag(9);
      output.WriteDouble(W);
    }
    if (X != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(X);
    }
    if (Y != 0D) {
      output.WriteRawTag(25);
      output.WriteDouble(Y);
    }
    if (Z != 0D) {
      output.WriteRawTag(33);
      output.WriteDouble(Z);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (W != 0D) {
      size += 1 + 8;
    }
    if (X != 0D) {
      size += 1 + 8;
    }
    if (Y != 0D) {
      size += 1 + 8;
    }
    if (Z != 0D) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Vec4 other) {
    if (other == null) {
      return;
    }
    if (other.W != 0D) {
      W = other.W;
    }
    if (other.X != 0D) {
      X = other.X;
    }
    if (other.Y != 0D) {
      Y = other.Y;
    }
    if (other.Z != 0D) {
      Z = other.Z;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          W = input.ReadDouble();
          break;
        }
        case 17: {
          X = input.ReadDouble();
          break;
        }
        case 25: {
          Y = input.ReadDouble();
          break;
        }
        case 33: {
          Z = input.ReadDouble();
          break;
        }
      }
    }
  }

}

public sealed partial class Syncable : pb::IMessage<Syncable> {
  private static readonly pb::MessageParser<Syncable> _parser = new pb::MessageParser<Syncable>(() => new Syncable());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Syncable> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GrpcReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Syncable() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Syncable(Syncable other) : this() {
    uuid_ = other.uuid_;
    position_ = other.position_ != null ? other.position_.Clone() : null;
    rotation_ = other.rotation_ != null ? other.rotation_.Clone() : null;
    velocity_ = other.velocity_ != null ? other.velocity_.Clone() : null;
    angularVelocity_ = other.angularVelocity_ != null ? other.angularVelocity_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Syncable Clone() {
    return new Syncable(this);
  }

  /// <summary>Field number for the "uuid" field.</summary>
  public const int UuidFieldNumber = 1;
  private string uuid_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Uuid {
    get { return uuid_; }
    set {
      uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "position" field.</summary>
  public const int PositionFieldNumber = 2;
  private global::Vec3 position_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Vec3 Position {
    get { return position_; }
    set {
      position_ = value;
    }
  }

  /// <summary>Field number for the "rotation" field.</summary>
  public const int RotationFieldNumber = 3;
  private global::Vec4 rotation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Vec4 Rotation {
    get { return rotation_; }
    set {
      rotation_ = value;
    }
  }

  /// <summary>Field number for the "velocity" field.</summary>
  public const int VelocityFieldNumber = 4;
  private global::Vec3 velocity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Vec3 Velocity {
    get { return velocity_; }
    set {
      velocity_ = value;
    }
  }

  /// <summary>Field number for the "angularVelocity" field.</summary>
  public const int AngularVelocityFieldNumber = 5;
  private global::Vec3 angularVelocity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Vec3 AngularVelocity {
    get { return angularVelocity_; }
    set {
      angularVelocity_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Syncable);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Syncable other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Uuid != other.Uuid) return false;
    if (!object.Equals(Position, other.Position)) return false;
    if (!object.Equals(Rotation, other.Rotation)) return false;
    if (!object.Equals(Velocity, other.Velocity)) return false;
    if (!object.Equals(AngularVelocity, other.AngularVelocity)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
    if (position_ != null) hash ^= Position.GetHashCode();
    if (rotation_ != null) hash ^= Rotation.GetHashCode();
    if (velocity_ != null) hash ^= Velocity.GetHashCode();
    if (angularVelocity_ != null) hash ^= AngularVelocity.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Uuid.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Uuid);
    }
    if (position_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Position);
    }
    if (rotation_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Rotation);
    }
    if (velocity_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Velocity);
    }
    if (angularVelocity_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(AngularVelocity);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Uuid.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
    }
    if (position_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
    }
    if (rotation_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rotation);
    }
    if (velocity_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Velocity);
    }
    if (angularVelocity_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AngularVelocity);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Syncable other) {
    if (other == null) {
      return;
    }
    if (other.Uuid.Length != 0) {
      Uuid = other.Uuid;
    }
    if (other.position_ != null) {
      if (position_ == null) {
        position_ = new global::Vec3();
      }
      Position.MergeFrom(other.Position);
    }
    if (other.rotation_ != null) {
      if (rotation_ == null) {
        rotation_ = new global::Vec4();
      }
      Rotation.MergeFrom(other.Rotation);
    }
    if (other.velocity_ != null) {
      if (velocity_ == null) {
        velocity_ = new global::Vec3();
      }
      Velocity.MergeFrom(other.Velocity);
    }
    if (other.angularVelocity_ != null) {
      if (angularVelocity_ == null) {
        angularVelocity_ = new global::Vec3();
      }
      AngularVelocity.MergeFrom(other.AngularVelocity);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Uuid = input.ReadString();
          break;
        }
        case 18: {
          if (position_ == null) {
            position_ = new global::Vec3();
          }
          input.ReadMessage(position_);
          break;
        }
        case 26: {
          if (rotation_ == null) {
            rotation_ = new global::Vec4();
          }
          input.ReadMessage(rotation_);
          break;
        }
        case 34: {
          if (velocity_ == null) {
            velocity_ = new global::Vec3();
          }
          input.ReadMessage(velocity_);
          break;
        }
        case 42: {
          if (angularVelocity_ == null) {
            angularVelocity_ = new global::Vec3();
          }
          input.ReadMessage(angularVelocity_);
          break;
        }
      }
    }
  }

}

public sealed partial class SyncableContainer : pb::IMessage<SyncableContainer> {
  private static readonly pb::MessageParser<SyncableContainer> _parser = new pb::MessageParser<SyncableContainer>(() => new SyncableContainer());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SyncableContainer> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GrpcReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SyncableContainer() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SyncableContainer(SyncableContainer other) : this() {
    uuid_ = other.uuid_;
    model_ = other.model_;
    syncables_ = other.syncables_.Clone();
    type_ = other.type_;
    name_ = other.name_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SyncableContainer Clone() {
    return new SyncableContainer(this);
  }

  /// <summary>Field number for the "uuid" field.</summary>
  public const int UuidFieldNumber = 1;
  private string uuid_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Uuid {
    get { return uuid_; }
    set {
      uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "model" field.</summary>
  public const int ModelFieldNumber = 2;
  private string model_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Model {
    get { return model_; }
    set {
      model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "syncables" field.</summary>
  public const int SyncablesFieldNumber = 3;
  private static readonly pbc::MapField<string, global::Syncable>.Codec _map_syncables_codec
      = new pbc::MapField<string, global::Syncable>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Syncable.Parser), 26);
  private readonly pbc::MapField<string, global::Syncable> syncables_ = new pbc::MapField<string, global::Syncable>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<string, global::Syncable> Syncables {
    get { return syncables_; }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 4;
  private global::SyncableContainerType type_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SyncableContainerType Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 5;
  private string name_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SyncableContainer);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SyncableContainer other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Uuid != other.Uuid) return false;
    if (Model != other.Model) return false;
    if (!Syncables.Equals(other.Syncables)) return false;
    if (Type != other.Type) return false;
    if (Name != other.Name) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
    if (Model.Length != 0) hash ^= Model.GetHashCode();
    hash ^= Syncables.GetHashCode();
    if (Type != 0) hash ^= Type.GetHashCode();
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Uuid.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Uuid);
    }
    if (Model.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Model);
    }
    syncables_.WriteTo(output, _map_syncables_codec);
    if (Type != 0) {
      output.WriteRawTag(32);
      output.WriteEnum((int) Type);
    }
    if (Name.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Name);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Uuid.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
    }
    if (Model.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
    }
    size += syncables_.CalculateSize(_map_syncables_codec);
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SyncableContainer other) {
    if (other == null) {
      return;
    }
    if (other.Uuid.Length != 0) {
      Uuid = other.Uuid;
    }
    if (other.Model.Length != 0) {
      Model = other.Model;
    }
    syncables_.Add(other.syncables_);
    if (other.Type != 0) {
      Type = other.Type;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Uuid = input.ReadString();
          break;
        }
        case 18: {
          Model = input.ReadString();
          break;
        }
        case 26: {
          syncables_.AddEntriesFrom(input, _map_syncables_codec);
          break;
        }
        case 32: {
          type_ = (global::SyncableContainerType) input.ReadEnum();
          break;
        }
        case 42: {
          Name = input.ReadString();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
